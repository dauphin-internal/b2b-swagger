openapi: 3.0.0
servers:
  - url: https://b2b-api.dauphin.group
info:
  title: B2B Services API
  version: 1.0.0
  description: >-
    API for B2B services


    ## Getting Started

    Obtain API key directly from admin panel or from your manager.


    Use apikey from response to set in `x-api-key` header.


    ## Access Levels

    - READ_ONLY: Can only read own data

    - DEVELOPER: Can create and modify own resources

    - PRODUCTION: Can create, modify and delete own resources and perform
    transactions

    ## Vendors

    To start using the API you need to obtain venor_ids.


    Every vendor id represents a vendor that you can perform transactions with.


    Every vendor_id is a specific program with single currencly, limits, card
    network and other parameters.


    ## Account balance

    Use `GET /api/account/vendors/balance` to get your account balance.


    Each vendor has its own balance.


    You can topup your balance by sending funds from your vendor account by
    "Send" - "Wholesale Cards Topup" option.


    ## Cards

    Use `GET /api/cards` to get your cards.


    Use `GET /api/cards/{id}/sensitive` to get card sensitive data.


    ## Prepaid cards

    Prepaid cards are cards that has own balance. Prepaid cards are not linked
    to your account balance.


    You can topup your prepaid card multiple times, but you cant withdraw funds
    from it.


    Use `POST /api/cards/prepaid` to create a new prepaid card.


    To create a prepaid card you need to provide vendor_id, mobile and/or email.
    Either mobile or email is required.


    Use `GET /api/cards/` with parameter `is_prepaid: true` to get your prepaid
    cards.


    Use `PUT /api/cards/{card_id}/top-up` to topup your prepaid card.


    Its good to check topup possibility before topup.


    Use `GET /api/cards/{card_id}/top-up/check` to check topup possibility.


    ## Balance Cards

    Balance cards are cards that are linked to sub-account.


    You can not topup balance cards directly. Topup sub-account instead.


    First you need to create a sub-account.


    Use `POST /api/sub-accounts` to create a new sub-account.


    To create a balance card you need to provide vendor_id, sub_account_id,
    mobile and email. Either mobile or email is required.


    Use `POST /api/cards/balance` to create a new balance card.


    Use `GET /api/cards/` with parameter `is_prepaid: false` to get your balance
    cards.


    Use `PUT /api/sub-accounts/{sub_account_id}/top-up` to topup your balance
    card.


    Its good to check topup possibility before topup.


    Use `GET /api/sub-accounts/{sub_account_id}/top-up/check` to check topup
    possibility.


    ## Support requests

    You can create support requests to get help with your account.


    For every request plese provide your api_access object. You can obtain it by
    `GET /api/access/info`.


    Also please provide a request in a curl format and API response. Never
    expose your API key in a request.


    ## Download API Specification


    You can download the complete API specification in JSON format at:
    [/api-docs.json](/api-docs.json)
tags:
  - name: Access
    description: API access management
  - name: Account
    description: Account operations
  - name: Cards
    description: Card management
  - name: Sub-accounts
    description: Sub-account management
  - name: Transactions
    description: Transaction operations
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    Role:
      type: string
      enum:
        - READ_ONLY
        - DEVELOPER
        - PRODUCTION
        - OWNER
      description: >-
        User role levels:


        - READ_ONLY: Can only read own data

        - DEVELOPER: Can create and modify own resources

        - PRODUCTION: Can create, modify and delete own resources and perform
        transactions

        - OWNER: Has full access to all resources and can manage all aspects of
        the system
    CardStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - CANCELED
      description: Card status
    StatementResponse:
      type: object
      properties:
        has_more:
          type: boolean
        count:
          type: integer
        data:
          type: array
          items:
            type: object
            properties:
              transaction_id:
                type: string
              transaction_type:
                type: string
                enum:
                  - AUTHORIZATION
                  - TRANSACTION
                  - FEE
                  - ACCOUNT_ADJUSTMENT
              status:
                type: string
                enum:
                  - APPROVED
                  - PENDING
                  - DECLINED
              transaction_date:
                type: string
                format: date-time
              posted_date:
                type: string
                format: date-time
              transaction_amount:
                type: number
              transaction_currency:
                type: string
              billing_amount:
                type: number
              billing_currency:
                type: string
              merchant:
                type: object
                properties:
                  name:
                    type: string
                  category_code:
                    type: string
                  city:
                    type: string
                  country:
                    type: string
              card_id:
                type: string
              masked_card_number:
                type: string
              auth_code:
                type: string
              retrieval_ref:
                type: string
              network_transaction_id:
                type: string
              client_data:
                type: string
              fiat_account_id:
                type: string
              wallet_id:
                type: string
              card_nickname:
                type: string
              digital_wallet_token_id:
                type: string
              failure_reason:
                type: string
              matched_authorizations:
                type: array
                items:
                  type: string
    Transaction:
      type: object
      properties:
        vendor_transaction_id:
          type: string
          description: Transaction ID from vendor
        created_at:
          type: string
          format: date-time
        cleared_at:
          type: string
          format: date-time
        merchant:
          type: object
          properties:
            name:
              type: string
            category_code:
              type: string
            city:
              type: string
            country:
              type: string
            terminal_id:
              type: string
            merchant_id:
              type: string
        transaction_amount:
          type: number
        transaction_currency:
          type: string
        billing_amount:
          type: number
        billing_currency:
          type: string
        status:
          type: string
          enum:
            - APPROVED
            - PENDING
            - DECLINED
            - REVERSED
        transaction_type:
          type: string
          enum:
            - AUTHORIZATION
            - ACCOUNT_ADJUSTMENT
            - FEE
        is_credit:
          type: boolean
security:
  - ApiKeyAuth: []
paths:
  /api/access/info:
    get:
      summary: Get API client info by API key
      security:
        - ApiKeyAuth: []
      tags:
        - Access
      deprecated: false
      responses:
        '200':
          description: API client information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  role:
                    type: string
                    enum:
                      - READ_ONLY
                      - DEVELOPER
                      - OWNER
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '401':
          description: No token provided or API key is required
        '403':
          description: Access denied
        '404':
          description: Client not found
        '500':
          description: Server error
  /api/access/list:
    get:
      summary: List all API clients
      deprecated: false
      security:
        - ApiKeyAuth: []
      tags:
        - Access
      responses:
        '200':
          description: List of API clients
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    role:
                      type: string
                      enum:
                        - READ_ONLY
                        - DEVELOPER
                        - OWNER
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
        '401':
          description: Unauthorized
        '500':
          description: Server error
  /api/access/webhook:
    post:
      summary: Create a webhook
      deprecated: false
      security:
        - ApiKeyAuth: []
      tags:
        - Access
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook_url:
                  type: string
                webhook_secret:
                  type: string
      responses:
        '200':
          description: Webhook created successfully
        '401':
          description: Unauthorized
        '500':
          description: Server error
    put:
      summary: Update a webhook
      deprecated: false
      security:
        - ApiKeyAuth: []
      tags:
        - Access
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                webhook_url:
                  type: string
                webhook_secret:
                  type: string
      responses:
        '200': 
          description: Request completed successfully
        '401':
          description: Unauthorized
        '500':
          description: Server error
    get:
      summary: Get all webhooks
      deprecated: false
      security:
        - ApiKeyAuth: []
      tags:
        - Access
      responses:
        '200':
          description: List of webhooks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      format: integer
        '401':
          description: Unauthorized
        '500':
          description: Server error
  /api/account/vendors/balance:
    get:
      summary: Get vendors balances
      security:
        - ApiKeyAuth: []
      tags:
        - Account
      responses:
        '200':
          description: List of vendors balances
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    balance:
                      type: number
                      format: float
                    currency:
                      type: string
                      example: EUR
                    updated_at:
                      type: string
                      format: date-time
        '401':
          description: Unauthorized
        '500':
          description: Server error
  /api/account/vendors/list:
    get:
      summary: Get vendors list
      security:
        - ApiKeyAuth: []
      tags:
        - Account
      responses:
        '200':
          description: List of vendors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    balance:
                      type: number
                      format: float
                    currency:
                      type: string
                      example: EUR
                    updated_at:
                      type: string
                      format: date-time
        '401':
          description: Unauthorized
        '500':
          description: Server error
  /api/account/vendors/balance/topup:
    put:
      summary: Top up vendor balance. OWNER ONLY
      security:
        - ApiKeyAuth: []
      tags:
        - Account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                vendor_id:
                  type: string
                amount:
                  type: number
      responses:
        '200':
          description: Vendor balance toped up
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    balance:
                      type: number
                      format: float
                    currency:
                      type: string
                      example: EUR
                    updated_at:
                      type: string
                      format: date-time
        '401':
          description: Unauthorized
        '500':
          description: Server error
  /api/cards:
    get:
      summary: Get list of cards
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Number of records to skip
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of records to return
        - in: query
          name: status
          schema:
            type: string
            pattern: ^(ACTIVE|INACTIVE|CANCELED)(,(ACTIVE|INACTIVE|CANCELED))*$
            example: ACTIVE,INACTIVE
          description: Comma-separated list of statuses
          examples:
            single:
              value: ACTIVE
              summary: Single status
            multiple:
              value: ACTIVE,INACTIVE
              summary: Multiple statuses
        - in: query
          name: is_prepaid
          schema:
            type: boolean
          description: Filter by prepaid cards
        - in: query
          name: ids
          schema:
            type: string
            example: 1,2,3
          description: Filter by card ids
        - in: query
          name: vendor_id
          schema:
            type: string
            example: '1'
          description: Filter by vendor id
      responses:
        '200':
          description: List of cards
  /api/cards/{id}/sensitive:
    get:
      summary: Get card sensitive data
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      responses:
        '200':
          description: Card sensitive data
          content:
            application/json:
              schema:
                type: object
                properties:
                  cardNumber:
                    type: string
                  expiryDate:
                    type: string
                  cvv:
                    type: string
        '400':
          description: Invalid request
        '404':
          description: Card not found
        '500':
          description: Internal server error
  /api/cards/{id}:
    get:
      summary: Get card by ID
      deprecated: true
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      responses:
        '200':
          description: Successful response with card data
        '400':
          description: Invalid request
        '404':
          description: Card not found
        '500':
          description: Internal server error
    put:
      summary: Update card by ID
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: New card title
                vendor_account_id:
                  type: string
                  description: New vendor account ID
      responses:
        '200':
          description: Card updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Card updated successfully
        '400':
          description: Неверный запрос
        '404':
          description: Card not found
        '500':
          description: Internal server error
    delete:
      summary: Delete card by ID
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      responses:
        '200':
          description: Card deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Card deleted successfully
        '400':
          description: Invalid request
        '404':
          description: Card not found
        '500':
          description: Internal server error
  /api/cards/card_id/{id}:
    get:
      summary: Get card by ID
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      responses:
        '200':
          description: Successful response with card data
        '400':
          description: Invalid request
        '404':
          description: Card not found
        '500':
          description: Internal server error
  /api/cards/card_last4/{last4}:
    get:
      summary: Get card by last 4 digits
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: last4
          required: true
          schema:
            type: string
          description: Last 4 digits of the card
      responses:
        '200':
          description: Successful response with card data
        '400':
          description: Invalid request
        '404':
          description: Card not found
        '500':
          description: Internal server error
  /api/cards/card_vendor_card_id/{vendor_card_id}:
    get:
      summary: Get card by vendor card ID
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: vendor_card_id
          required: true
          schema:
            type: string
          description: Vendor card ID
      responses:
        '200':
          description: Successful response with card data
        '400':
          description: Invalid request
        '404':
          description: Card not found
        '500':
          description: Internal server error
  /api/cards/balance:
    post:
      summary: Create a new balance card
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: query
          name: vendorId
          required: true
          schema:
            type: string
          description: Vendor ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - sub_account_id
              properties:
                title:
                  type: string
                  description: Card title
                sub_account_id:
                  type: string
                  description: Sub-account ID
                email:
                  type: string
                  description: Email
                mobile:
                  type: string
                  description: Mobile
      responses:
        '201':
          description: Card created successfully
        '400':
          description: Invalid request
        '500':
          description: Internal server error
  /api/cards/prepaid:
    post:
      summary: Create a new prepaid card
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: query
          name: vendorId
          required: true
          schema:
            type: string
          description: Vendor ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - sub_account_id
              properties:
                title:
                  type: string
                  description: Card title
                email:
                  type: string
                  description: Email
                mobile:
                  type: string
                  description: Mobile
      responses:
        '201':
          description: Card created successfully
        '400':
          description: Invalid request
        '500':
          description: Internal server error
  /api/cards/{id}/top-up:
    put:
      summary: Top up a prepaid card
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                  description: Amount to top up
      responses:
        '200':
          description: Card topped up successfully
        '400':
          description: Invalid request
        '404':
          description: Card not found
        '500':
          description: Server error
  /api/cards/{id}/freeze:
    put:
      summary: Freeze a card
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  enum:
                    - lost
                    - stolen
                    - other
                  default: other
                  description: Reason for freezing the card
      responses:
        '200':
          description: Card frozen successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Card successfully frozen
        '400':
          description: Invalid request
        '404':
          description: Card not found
        '500':
          description: Internal server error
  /api/cards/{id}/unfreeze:
    put:
      summary: Unfreeze a card
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      responses:
        '200':
          description: Card unfrozen successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Card successfully unfrozen
        '400':
          description: Invalid request
        '404':
          description: Card not found
        '500':
          description: Internal server error
  /api/cards/{id}/transactions:
    get:
      tags:
        - Cards
      summary: Get card transactions
      description: >-
        Get detailed transaction history for a card including authorizations,
        transactions, fees and adjustments
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          description: Items per page
      responses:
        '200':
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  has_more:
                    type: boolean
                    description: Whether there are more records
                  count:
                    type: integer
                    description: Total number of records
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        vendor_transaction_id:
                          type: string
                          description: Transaction ID from vendor
                        created_at:
                          type: string
                          format: date-time
                        cleared_at:
                          type: string
                          format: date-time
                        merchant:
                          type: object
                          properties:
                            name:
                              type: string
                            category_code:
                              type: string
                            city:
                              type: string
                            country:
                              type: string
                            terminal_id:
                              type: string
                            merchant_id:
                              type: string
                        transaction_amount:
                          type: number
                        transaction_currency:
                          type: string
                        billing_amount:
                          type: number
                        billing_currency:
                          type: string
                        status:
                          type: string
                          enum:
                            - APPROVED
                            - PENDING
                            - DECLINED
                            - REVERSED
                        transaction_type:
                          type: string
                          enum:
                            - AUTHORIZATION
                            - ACCOUNT_ADJUSTMENT
                            - FEE
                        is_credit:
                          type: boolean
                        failure_reason:
                          type: string
                        marked_for_dispute_at:
                          type: string
                          format: date-time
                        marked_for_dispute_by:
                          type: string
        '401':
          description: Unauthorized
        '403':
          description: Access denied
        '404':
          description: Card not found
        '500':
          description: Server error
  /api/cards/{id}/limits:
    put:
      summary: Update card limits
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                all_time_cap:
                  type: number
                daily_cap:
                  type: number
                weekly_cap:
                  type: number
                monthly_cap:
                  type: number
                yearly_cap:
                  type: number
                per_transaction_cap:
                  type: number
      responses:
        '200':
          description: Card limits updated successfully
        '400':
          description: Invalid request
        '404':
          description: Card not found
        '500':
          description: Internal server error
  /api/cards/{id}/top-up/check:
    get:
      summary: Check top-up allowance for a card
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
        - in: query
          name: amount
          schema:
            type: number
          description: Amount to check
      responses:
        '200':
          description: Top-up allowance checked successfully
        '400':
          description: Invalid request
        '404':
          description: Card not found
        '500':
          description: Internal server error
  /api/cards/{id}/email:
    get:
      summary: Get card email
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      responses:
        '200':
          description: Card email info
    put:
      summary: Update card email
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  maxLength: 64
                type:
                  type: string
                  default: work
                  maxLength: 10
      responses:
        '200':
          description: Email updated successfully
  /api/cards/{id}/phone:
    get:
      summary: Get card phone
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      responses:
        '200':
          description: Card phone info
    put:
      summary: Update card phone
      security:
        - ApiKeyAuth: []
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Card ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                zoneNumber:
                  type: string
                type:
                  type: string
                  default: mob
                  maxLength: 10
      responses:
        '200':
          description: Phone updated successfully
  /api/sub-accounts:
    get:
      summary: Get list of sub-accounts
      security:
        - ApiKeyAuth: []
      tags:
        - Sub-accounts
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Items per page
        - in: query
          name: ids
          schema:
            type: string
            example: 1,2,3
          description: Filter by sub-account ids
        - in: query
          name: vendorId
          schema:
            type: string
            example: '1234567890'
          description: Filter by vendorId
      responses:
        '200':
          description: List of sub-accounts
        '403':
          description: Access denied
        '500':
          description: Server error
    post:
      summary: Create new sub-account
      security:
        - ApiKeyAuth: []
      tags:
        - Sub-accounts
      parameters:
        - in: query
          name: vendorId
          required: true
          schema:
            type: string
          description: Vendor ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                  description: Sub-account name
      responses:
        '201':
          description: Sub-account created successfully
        '400':
          description: Invalid request data
        '403':
          description: Access denied
        '500':
          description: Server error
  /api/sub-accounts/{id}:
    get:
      summary: Get sub-account by ID
      security:
        - ApiKeyAuth: []
      tags:
        - Sub-accounts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Sub-account ID
      responses:
        '200':
          description: Sub-account details
        '403':
          description: Access denied
        '404':
          description: Sub-account not found
        '500':
          description: Server error
    put:
      summary: Update sub-account
      security:
        - ApiKeyAuth: []
      tags:
        - Sub-accounts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Sub-account ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: New sub-account name
      responses:
        '200':
          description: Sub-account updated successfully
        '400':
          description: Invalid request data
        '403':
          description: Access denied
        '500':
          description: Server error
  /api/sub-accounts/{id}/top-up:
    put:
      summary: Top up sub-account
      security:
        - ApiKeyAuth: []
      tags:
        - Sub-accounts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Sub-account ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  description: Amount to top up
      responses:
        '200':
          description: Sub-account topped up successfully
        '400':
          description: Invalid request data
        '403':
          description: Access denied
        '500':
          description: Server error
  /api/sub-accounts/{id}/withdraw:
    put:
      summary: Withdraw from sub-account
      security:
        - ApiKeyAuth: []
      tags:
        - Sub-accounts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Sub-account ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  description: Amount to withdraw
      responses:
        '200':
          description: Withdrawal successful
        '400':
          description: Invalid request data
        '403':
          description: Access denied
        '500':
          description: Server error
  /api/sub-accounts/{id}/cards:
    get:
      tags:
        - Sub-accounts
      deprecated: true
      summary: Get all cards for a sub-account
      description: Retrieves all cards associated with a specific sub-account
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Sub-account ID
          schema:
            type: string
            format: uuid
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of items per page
        - in: query
          name: cardStatuses
          schema:
            type: string
          description: Comma-separated list of card statuses (e.g. Active,Blocked)
      responses:
        '200':
          description: List of cards successfully retrieved
        '401':
          description: Unauthorized
        '404':
          description: Sub-account not found
        '500':
          description: Server error
  /api/sub-accounts/{id}/statement:
    get:
      tags:
        - Sub-accounts
      summary: Get account statement
      description: >-
        Get detailed statement for a sub-account including transactions, fees
        and adjustments
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Sub-account ID
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          description: Items per page
      responses:
        '200':
          description: Statement retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Record ID
                        type:
                          type: string
                          enum:
                            - Authorization
                            - Transaction
                            - Fee
                            - AccountAdjustment
                          description: Type of record
                        date:
                          type: string
                          format: date-time
                          description: Date of record
                        status:
                          type: string
                          enum:
                            - Completed
                            - Pending
                            - Canceled
                          description: Status of record
                        description:
                          type: string
                          description: Transaction description
                        transaction_amount:
                          type: number
                          format: float
                          description: Original transaction amount
                        transaction_currency:
                          type: string
                          description: Currency of transaction
                        account_amount:
                          type: number
                          format: float
                          description: Amount in account currency
                        account_currency:
                          type: string
                          description: Account currency
                        merchant_name:
                          type: string
                          description: Name of merchant
                  total_records:
                    type: integer
                    description: Total number of records
                  has_more:
                    type: boolean
                    description: Whether there are more records
                  current_page:
                    type: integer
                    description: Current page number
        '401':
          description: Unauthorized
        '403':
          description: Access denied
        '404':
          description: Sub-account not found
        '500':
          description: Server error
  /api/sub-accounts/{id}/top-up/check:
    get:
      tags:
        - Sub-accounts
      summary: Check top-up allowance
      description: Check if a sub-account can be topped up
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Sub-account ID
        - in: query
          name: amount
          schema:
            type: number
          description: Amount to top up
      responses:
        '200':
          description: Top-up allowance checked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  allowed:
                    type: boolean
                    description: Whether top-up is allowed
                  max_allowed:
                    type: number
                    description: Maximum allowed amount
        '401':
          description: Unauthorized
        '403':
          description: Access denied
        '404':
          description: Sub-account not found
        '500':
          description: Server error
  /api/transactions:
    get:
      deprecated: true
      tags:
        - Transactions
      summary: Get transactions list
      description: Get detailed transaction history
      security:
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          description: Items per page
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  has_more:
                    type: boolean
                    description: Whether there are more records
                  count:
                    type: integer
                    description: Total number of records
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
        '403':
          description: Access denied
        '500':
          description: Server error
